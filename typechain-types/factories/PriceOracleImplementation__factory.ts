/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PriceOracleImplementation,
  PriceOracleImplementationInterface,
} from "../PriceOracleImplementation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cEtherAddress",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    constant: true,
    inputs: [],
    name: "cEtherAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract CToken",
        name: "cToken",
        type: "address",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102523803806102528339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b03199092169190911790556101ed806100656000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806366331bba14610046578063de836acf14610062578063fc57d4df14610086575b600080fd5b61004e6100be565b604080519115158252519081900360200190f35b61006a6100c3565b604080516001600160a01b039092168252519081900360200190f35b6100ac6004803603602081101561009c57600080fd5b50356001600160a01b03166100d2565b60408051918252519081900360200190f35b600181565b6000546001600160a01b031681565b600080546001600160a01b03838116911614156100f85750670de0b6b3a76400006101b3565b600073986b5e1e1755e3c2440e960477f25201b0a8bbd46001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561014757600080fd5b505afa15801561015b573d6000803e3d6000fd5b505050506040513d602081101561017157600080fd5b50519050600081136101875760009150506101b3565b64e8d4a51000810281818161019857fe5b0464e8d4a51000146101af576000925050506101b3565b9150505b91905056fea265627a7a7231582018461425b2e7b9b01d5c794ea7443f1b439f6e6cc4d49760c9bb278773a8303e64736f6c63430005100032";

type PriceOracleImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceOracleImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceOracleImplementation__factory extends ContractFactory {
  constructor(...args: PriceOracleImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _cEtherAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceOracleImplementation> {
    return super.deploy(
      _cEtherAddress,
      overrides || {}
    ) as Promise<PriceOracleImplementation>;
  }
  getDeployTransaction(
    _cEtherAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_cEtherAddress, overrides || {});
  }
  attach(address: string): PriceOracleImplementation {
    return super.attach(address) as PriceOracleImplementation;
  }
  connect(signer: Signer): PriceOracleImplementation__factory {
    return super.connect(signer) as PriceOracleImplementation__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleImplementationInterface {
    return new utils.Interface(_abi) as PriceOracleImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceOracleImplementation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PriceOracleImplementation;
  }
}
