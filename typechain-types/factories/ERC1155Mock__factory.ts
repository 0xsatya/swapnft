/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155Mock, ERC1155MockInterface } from "../ERC1155Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f0738038062001f0783398101604081905262000034916200011d565b80620000408162000048565b505062000236565b80516200005d90600290602084019062000061565b5050565b8280546200006f90620001f9565b90600052602060002090601f016020900481019282620000935760008555620000de565b82601f10620000ae57805160ff1916838001178555620000de565b82800160010185558215620000de579182015b82811115620000de578251825591602001919060010190620000c1565b50620000ec929150620000f0565b5090565b5b80821115620000ec5760008155600101620000f1565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200013157600080fd5b82516001600160401b03808211156200014957600080fd5b818501915085601f8301126200015e57600080fd5b81518181111562000173576200017362000107565b604051601f8201601f19908116603f011681019083821181831017156200019e576200019e62000107565b816040528281528886848701011115620001b757600080fd5b600093505b82841015620001db5784840186015181850187015292850192620001bc565b82841115620001ed5760008684830101525b98975050505050505050565b600181811c908216806200020e57607f821691505b602082108114156200023057634e487b7160e01b600052602260045260246000fd5b50919050565b611cc180620002466000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634e1273f41161008c578063a22cb46511610066578063a22cb465146101bd578063e985e9c5146101d0578063f242432a1461020c578063f5298aca1461021f57600080fd5b80634e1273f4146101775780636b20c45414610197578063731133e9146101aa57600080fd5b8062fdd58e146100d357806301ffc9a7146100f957806302fe53051461011c5780630e89341c146101315780631f7fdffa146101515780632eb2c2d614610164575b600080fd5b6100e66100e13660046111c6565b610232565b6040519081526020015b60405180910390f35b61010c610107366004611206565b6102c9565b60405190151581526020016100f0565b61012f61012a3660046112cb565b61031b565b005b61014461013f36600461131c565b610327565b6040516100f09190611382565b61012f61015f36600461144a565b6103bb565b61012f6101723660046114e3565b6103cd565b61018a61018536600461158d565b610464565b6040516100f09190611693565b61012f6101a53660046116a6565b61058e565b61012f6101b836600461171a565b61059e565b61012f6101cb36600461176f565b6105aa565b61010c6101de3660046117ab565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61012f61021a3660046117de565b6105b9565b61012f61022d366004611843565b610640565b60006001600160a01b0383166102a35760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102fa57506001600160e01b031982166303a24d0760e21b145b8061031557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6103248161064b565b50565b60606002805461033690611876565b80601f016020809104026020016040519081016040528092919081815260200182805461036290611876565b80156103af5780601f10610384576101008083540402835291602001916103af565b820191906000526020600020905b81548152906001019060200180831161039257829003601f168201915b50505050509050919050565b6103c78484848461065e565b50505050565b6001600160a01b0385163314806103e957506103e985336101de565b6104505760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161029a565b61045d85858585856107a9565b5050505050565b606081518351146104c95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161029a565b6000835167ffffffffffffffff8111156104e5576104e561122a565b60405190808252806020026020018201604052801561050e578160200160208202803683370190505b50905060005b845181101561058657610559858281518110610532576105326118b1565b602002602001015185838151811061054c5761054c6118b1565b6020026020010151610232565b82828151811061056b5761056b6118b1565b602090810291909101015261057f816118dd565b9050610514565b509392505050565b610599838383610945565b505050565b6103c784848484610ac1565b6105b5338383610b91565b5050565b6001600160a01b0385163314806105d557506105d585336101de565b6106335760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161029a565b61045d8585858585610c72565b610599838383610d8f565b80516105b5906002906020840190611111565b6001600160a01b0384166106845760405162461bcd60e51b815260040161029a906118f8565b81518351146106a55760405162461bcd60e51b815260040161029a90611939565b3360005b8451811015610741578381815181106106c4576106c46118b1565b60200260200101516000808784815181106106e1576106e16118b1565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546107299190611981565b90915550819050610739816118dd565b9150506106a9565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610792929190611999565b60405180910390a461045d81600087878787610e91565b81518351146107ca5760405162461bcd60e51b815260040161029a90611939565b6001600160a01b0384166107f05760405162461bcd60e51b815260040161029a906119c7565b3360005b84518110156108d7576000858281518110610811576108116118b1565b60200260200101519050600085838151811061082f5761082f6118b1565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561087f5760405162461bcd60e51b815260040161029a90611a0c565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906108bc908490611981565b92505081905550505050806108d0906118dd565b90506107f4565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610927929190611999565b60405180910390a461093d818787878787610e91565b505050505050565b6001600160a01b03831661096b5760405162461bcd60e51b815260040161029a90611a56565b805182511461098c5760405162461bcd60e51b815260040161029a90611939565b604080516020810190915260009081905233905b8351811015610a625760008482815181106109bd576109bd6118b1565b6020026020010151905060008483815181106109db576109db6118b1565b602090810291909101810151600084815280835260408082206001600160a01b038c168352909352919091205490915081811015610a2b5760405162461bcd60e51b815260040161029a90611a99565b6000928352602083815260408085206001600160a01b038b1686529091529092209103905580610a5a816118dd565b9150506109a0565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610ab3929190611999565b60405180910390a450505050565b6001600160a01b038416610ae75760405162461bcd60e51b815260040161029a906118f8565b33610b0181600087610af888610ffc565b61045d88610ffc565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610b31908490611981565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461045d81600087878787611047565b816001600160a01b0316836001600160a01b03161415610c055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161029a565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610c985760405162461bcd60e51b815260040161029a906119c7565b33610ca8818787610af888610ffc565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610ce95760405162461bcd60e51b815260040161029a90611a0c565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610d26908490611981565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610d86828888888888611047565b50505050505050565b6001600160a01b038316610db55760405162461bcd60e51b815260040161029a90611a56565b33610de581856000610dc687610ffc565b610dcf87610ffc565b5050604080516020810190915260009052505050565b6000838152602081815260408083206001600160a01b038816845290915290205482811015610e265760405162461bcd60e51b815260040161029a90611a99565b6000848152602081815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b0384163b1561093d5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610ed59089908990889088908890600401611add565b602060405180830381600087803b158015610eef57600080fd5b505af1925050508015610f1f575060408051601f3d908101601f19168201909252610f1c91810190611b3b565b60015b610fcc57610f2b611b58565b806308c379a01415610f655750610f40611b74565b80610f4b5750610f67565b8060405162461bcd60e51b815260040161029a9190611382565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161029a565b6001600160e01b0319811663bc197c8160e01b14610d865760405162461bcd60e51b815260040161029a90611bfe565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611036576110366118b1565b602090810291909101015292915050565b6001600160a01b0384163b1561093d5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061108b9089908990889088908890600401611c46565b602060405180830381600087803b1580156110a557600080fd5b505af19250505080156110d5575060408051601f3d908101601f191682019092526110d291810190611b3b565b60015b6110e157610f2b611b58565b6001600160e01b0319811663f23a6e6160e01b14610d865760405162461bcd60e51b815260040161029a90611bfe565b82805461111d90611876565b90600052602060002090601f01602090048101928261113f5760008555611185565b82601f1061115857805160ff1916838001178555611185565b82800160010185558215611185579182015b8281111561118557825182559160200191906001019061116a565b50611191929150611195565b5090565b5b808211156111915760008155600101611196565b80356001600160a01b03811681146111c157600080fd5b919050565b600080604083850312156111d957600080fd5b6111e2836111aa565b946020939093013593505050565b6001600160e01b03198116811461032457600080fd5b60006020828403121561121857600080fd5b8135611223816111f0565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156112665761126661122a565b6040525050565b600067ffffffffffffffff8311156112875761128761122a565b60405161129e601f8501601f191660200182611240565b8091508381528484840111156112b357600080fd5b83836020830137600060208583010152509392505050565b6000602082840312156112dd57600080fd5b813567ffffffffffffffff8111156112f457600080fd5b8201601f8101841361130557600080fd5b6113148482356020840161126d565b949350505050565b60006020828403121561132e57600080fd5b5035919050565b6000815180845260005b8181101561135b5760208185018101518683018201520161133f565b8181111561136d576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006112236020830184611335565b600067ffffffffffffffff8211156113af576113af61122a565b5060051b60200190565b600082601f8301126113ca57600080fd5b813560206113d782611395565b6040516113e48282611240565b83815260059390931b850182019282810191508684111561140457600080fd5b8286015b8481101561141f5780358352918301918301611408565b509695505050505050565b600082601f83011261143b57600080fd5b6112238383356020850161126d565b6000806000806080858703121561146057600080fd5b611469856111aa565b9350602085013567ffffffffffffffff8082111561148657600080fd5b611492888389016113b9565b945060408701359150808211156114a857600080fd5b6114b4888389016113b9565b935060608701359150808211156114ca57600080fd5b506114d78782880161142a565b91505092959194509250565b600080600080600060a086880312156114fb57600080fd5b611504866111aa565b9450611512602087016111aa565b9350604086013567ffffffffffffffff8082111561152f57600080fd5b61153b89838a016113b9565b9450606088013591508082111561155157600080fd5b61155d89838a016113b9565b9350608088013591508082111561157357600080fd5b506115808882890161142a565b9150509295509295909350565b600080604083850312156115a057600080fd5b823567ffffffffffffffff808211156115b857600080fd5b818501915085601f8301126115cc57600080fd5b813560206115d982611395565b6040516115e68282611240565b83815260059390931b850182019282810191508984111561160657600080fd5b948201945b8386101561162b5761161c866111aa565b8252948201949082019061160b565b9650508601359250508082111561164157600080fd5b5061164e858286016113b9565b9150509250929050565b600081518084526020808501945080840160005b838110156116885781518752958201959082019060010161166c565b509495945050505050565b6020815260006112236020830184611658565b6000806000606084860312156116bb57600080fd5b6116c4846111aa565b9250602084013567ffffffffffffffff808211156116e157600080fd5b6116ed878388016113b9565b9350604086013591508082111561170357600080fd5b50611710868287016113b9565b9150509250925092565b6000806000806080858703121561173057600080fd5b611739856111aa565b93506020850135925060408501359150606085013567ffffffffffffffff81111561176357600080fd5b6114d78782880161142a565b6000806040838503121561178257600080fd5b61178b836111aa565b9150602083013580151581146117a057600080fd5b809150509250929050565b600080604083850312156117be57600080fd5b6117c7836111aa565b91506117d5602084016111aa565b90509250929050565b600080600080600060a086880312156117f657600080fd5b6117ff866111aa565b945061180d602087016111aa565b93506040860135925060608601359150608086013567ffffffffffffffff81111561183757600080fd5b6115808882890161142a565b60008060006060848603121561185857600080fd5b611861846111aa565b95602085013595506040909401359392505050565b600181811c9082168061188a57607f821691505b602082108114156118ab57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156118f1576118f16118c7565b5060010190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60008219821115611994576119946118c7565b500190565b6040815260006119ac6040830185611658565b82810360208401526119be8185611658565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611b0990830186611658565b8281036060840152611b1b8186611658565b90508281036080840152611b2f8185611335565b98975050505050505050565b600060208284031215611b4d57600080fd5b8151611223816111f0565b600060033d1115611b715760046000803e5060005160e01c5b90565b600060443d1015611b825790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611bb257505050505090565b8285019150815181811115611bca5750505050505090565b843d8701016020828501011115611be45750505050505090565b611bf360208286010187611240565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611c8090830184611335565b97965050505050505056fea2646970667358221220514bf3868a2659e966b52e371f1d0ed0124af530d21b16e4422046063767884c64736f6c63430008090033";

type ERC1155MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Mock__factory extends ContractFactory {
  constructor(...args: ERC1155MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Mock> {
    return super.deploy(uri, overrides || {}) as Promise<ERC1155Mock>;
  }
  getDeployTransaction(
    uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri, overrides || {});
  }
  attach(address: string): ERC1155Mock {
    return super.attach(address) as ERC1155Mock;
  }
  connect(signer: Signer): ERC1155Mock__factory {
    return super.connect(signer) as ERC1155Mock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MockInterface {
    return new utils.Interface(_abi) as ERC1155MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Mock;
  }
}
